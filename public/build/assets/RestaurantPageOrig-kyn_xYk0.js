var C=Object.defineProperty;var j=(c,t,e)=>t in c?C(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var r=(c,t,e)=>j(c,typeof t!="symbol"?t+"":t,e);import{_ as A}from"./AppLayout.vue_vue_type_script_setup_true_lang-BtxoXEAO.js";import{_ as I}from"./PageContainer.vue_vue_type_script_setup_true_lang-BEBW8e7I.js";import{K as p,d as T,r as k,G as O,x as U,M as E,N as F,q as w,e as P,o as _,a as g,b as m,w as x,c as D}from"./app-DmiFfQ2G.js";import{U as v}from"./Konva-DDdcyEhf.js";import"./SecondaryButton.vue_vue_type_script_setup_true_lang-CqX5B3hd.js";import"./_plugin-vue_export-helper-DlAUqK2U.js";import"./TextLink.vue_vue_type_script_setup_true_lang-_a-QFXiR.js";const u={width:60,height:60,outerWidth:60,outerHeight:60};class ${constructor(t,e,a,o,s){r(this,"id",v.getUUID());r(this,"parentId",null);r(this,"angle",0);r(this,"konvaShape",null);r(this,"position",null);r(this,"visible",!0);this.position={x:t,y:e},this.angle=a,this.parentId=s,this.draw(o)}draw(t){this.konvaShape||this.drawFirstTime(t),this.drawEveryTime()}drawFirstTime(t){this.konvaShape=new p.Group({offset:{x:u.width/2,y:u.height/2},x:this.position.x,y:this.position.y,rotation:this.angle,draggable:!1});const e=new p.Rect({width:u.width,height:u.height,stroke:"silver",strokeWidth:4,fill:"transparent",cornerRadius:[0,20,20,0]}),a=e.clone({width:10});this.konvaShape.add(a,e),t.add(this.konvaShape)}drawEveryTime(){this.konvaShape.position(this.position),this.konvaShape.rotation(this.angle),this.konvaShape.visible(this.visible)}}const M={"square-4":{shape:"rect",width:200,height:200,chairPositions:[{x:0,y:.5,angle:0},{x:.5,y:0,angle:90},{x:1,y:.5,angle:180},{x:.5,y:1,angle:270}]},"square-6":{shape:"rect",width:200,height:100,chairPositions:[{x:0,y:.5,angle:0},{x:.33,y:0,angle:90},{x:.66,y:0,angle:90},{x:1,y:.5,angle:180},{x:.33,y:1,angle:270},{x:.66,y:1,angle:270}]},"circle-4":{shape:"circle",radius:120,chairPositions:[{x:0,y:.5,angle:0},{x:.5,y:0,angle:90},{x:1,y:.5,angle:180},{x:.5,y:1,angle:270}]}};class q{constructor(t,e,a,o){r(this,"id",v.getUUID());r(this,"position",{x:0,y:0});r(this,"rotation",0);r(this,"diet","Omnivore");r(this,"konvaShape",null);r(this,"konvaTable",null);r(this,"outerRect",null);r(this,"focus",!1);r(this,"eventRect",null);r(this,"tableShape","");r(this,"chairs",[]);r(this,"layer");this.layer=t,this.position={x:a,y:o},this.draw(e,this.position)}draw(t,e){this.konvaShape||this.drawFirstTime(t,e),this.drawEveryTime()}drawFirstTime(t,e){this.konvaShape=new p.Group({name:"table",draggable:!0,position:e}),this.konvaShape.setAttr("tableId",this.id);let a;const o=M[t];if(!o)throw new Error(`No table config matches the given name ${t}`);switch(this.tableShape=o.shape,o.shape){case"rect":a=new p.Rect({x:-(o.width/2),y:-(o.height/2),width:o.width,height:o.height,stroke:"silver",strokeWidth:4});break;case"circle":a=new p.Circle({radius:o.radius,stroke:"silver",strokeWidth:4});break}if(a){this.konvaTable=a,this.konvaShape.add(a),this.layer.add(this.konvaShape);let s=a.getSelfRect();const i=s.width+2*u.outerWidth/2,d=s.height+2*u.outerHeight/2;s={x:-i/2,y:-d/2,width:i,height:d},this.outerRect=s;for(const h of o.chairPositions)this.addChair(s.x+s.width*h.x,s.y+s.height*h.y,h.angle);this.eventRect=new p.Rect(this.konvaShape.getClientRect({skipTransform:!0})),this.eventRect.setAttrs({fill:"blue"}),this.konvaShape.add(this.eventRect),this.eventRect.moveToBottom()}else throw new Error(`Some error creating table of type ${t}`);this.konvaShape.on("mousedown",function(){const s=this.getAttr("tableId");globalThis.model.tables.get(s).setFocus(!0)}),this.konvaShape.on("dragend",function(){const s=this.getAttr("tableId"),i=globalThis.model.tables.get(s);if(i.hitCheck()){alert("Tables may not overlap!"),i.draw();return}const h={obj:{type:"table",id:s},before:{position:{x:i.position.x,y:i.position.y}},after:{position:{x:i.konvaShape.position().x,y:i.konvaShape.position().y}}};globalThis.undoStack.apply(h),i.draw()}),this.konvaShape.on("transformend",function(){const s=this.getAttr("tableId"),i=globalThis.model.tables.get(s),d={obj:{type:"table",id:s},before:{rotation:i.rotation},after:{rotation:this.rotation()}};globalThis.undoStack.apply(d),i.draw()})}drawEveryTime(){if(this.focus){this.eventRect.opacity(.1),globalThis.transformer.nodes([this.konvaShape]);for(const t of globalThis.model.tables.values())t.id!==this.id&&t.setFocus(!1)}else this.eventRect.opacity(0);switch(this.diet){case"Vegetarian":this.konvaTable.fill("lime");break;case"Pescatarian":this.konvaTable.fill("red");break;case"Omnivore":this.konvaTable.fill("transparent");break}if(this.konvaShape.position(this.position),this.konvaShape.rotation(this.rotation),this.tableShape==="circle"){let t=0;for(const i of this.chairs)t=t+(i.visible?1:0);const e=360/t,a=-1*this.outerRect.width/2,o=0;let s=0;for(const i of this.chairs)if(i.visible){const d=e*s,h=d*(Math.PI/180),f=o*Math.cos(h)-a*Math.sin(h),l=a*Math.cos(h)+o*Math.sin(h);i.position={x:f,y:l},i.angle=d+90,i.drawEveryTime(),s=s+1}}}addChair(t,e,a){const o=new $(t,e,a,this.konvaShape,this.id);return this.chairs.push(o),globalThis.model.chairs.set(o.id,o),o}setFocus(t){this.focus=t,this.drawEveryTime()}hitCheck(){console.log(this.konvaShape);let t=!1;const e=this.konvaShape.getClientRect();for(const a of model.tables.values())if(a.id!==this.id){const o=a.konvaShape.getClientRect();if(v.hasOverlap(e,o)){t=!0;break}}return t}}class N{constructor(){r(this,"undoStack",[]);r(this,"idx",-1);r(this,"max",-1)}apply(t){this.max=this.idx+1,this.undoStack[this.max]=t,this.applyRedo()}mergeAttributes(t,e){for(const a of Object.keys(e))Object.prototype.hasOwnProperty.call(t,a)&&(v.isObject(t[a])?this.mergeAttributes(t[a],e[a]):t[a]=e[a])}applyRedo(){if(this.idx>=this.max){console.log("No more REDOs available");return}this.idx=this.idx+1;const t=this.undoStack[this.idx];let e=null;switch(t.obj.type){case"table":e=model.tables.get(t.obj.id);break;case"chair":e=model.chairs.get(t.obj.id);break;default:throw new Error(`Unexpected object type in redo [${t.obj.type}]`)}if(this.mergeAttributes(e,t.after),t.obj.type==="table")e.setFocus(!0);else if(t.obj.type==="chair"){const a=model.tables.get(e.parentId);a.setFocus(!0),a.draw()}e.draw()}applyUndo(){if(this.idx<=-1){console.log("No more UNDOs available");return}const t=this.undoStack[this.idx];let e=null;switch(t.obj.type){case"table":e=model.tables.get(t.obj.id);break;case"chair":e=model.chairs.get(t.obj.id);break;default:throw new Error(`Unexpected object type in redo [${t.obj.type}]`)}if(this.mergeAttributes(e,t.before),t.obj.type==="table")e.setFocus(!0);else if(t.obj.type==="chair"){const a=model.tables.get(e.parentId);a.setFocus(!0),a.draw()}e.draw(),this.idx=this.idx-1}}const W={class:"space-x-2"},B=T({__name:"RestaurantOrig",setup(c){const t=k({tables:[{shape:"circle-4",x:800,y:800},{shape:"square-4",x:800,y:300},{shape:"square-4",x:300,y:800},{shape:"square-6",x:1300,y:800},{shape:"square-4",x:800,y:1300}]});globalThis.model=O({tables:new Map,chairs:new Map}),globalThis.undoStack=new N;const e=k(),a=k();globalThis.transformer=new p.Transformer({padding:5,enabledAnchors:[],rotateAnchorOffset:20});function o(l){if(l.target.getClassName()==="Stage"&&globalThis.transformer.nodes().length>0){const n=globalThis.transformer.nodes()[0].getAttr("tableId");model.tables.get(n).setFocus(!1),globalThis.transformer.nodes([])}}U(()=>{const l=new p.Stage({container:"container",width:500,height:500,scaleX:.3,scaleY:.3,draggable:!0}),n=new p.Layer;n.add(globalThis.transformer),l.add(n),l.on("click",o),e.value=l,a.value=n,s(t.value)}),E(()=>{}),F(()=>{});function s(l){for(const n of l.tables){const b=new q(a.value,n.shape,n.x,n.y);model.tables.set(b.id,b)}}function i(){globalThis.undoStack.applyUndo()}function d(){globalThis.undoStack.applyRedo()}function h(){if(globalThis.transformer.nodes().length===0)return;const l=globalThis.transformer.nodes()[0],n=model.tables.get(l.getAttr("tableId"));if(n.tableShape!=="circle")return alert("Can only add chairs to circle tables!"),!1;const y={obj:{type:"chair",id:n.addChair().id},before:{visible:!1},after:{visible:!0}};globalThis.undoStack.apply(y)}function f(l){if(transformer.nodes().length>0){const n=transformer.nodes()[0],b=model.tables.get(n.getAttr("tableId")),y={obj:{type:"table",id:b.id},before:{diet:b.diet},after:{diet:l}};undoStack.apply(y)}}return(l,n)=>{const b=w("v-transformer"),y=w("v-layer"),R=w("v-stage");return _(),P("div",null,[g("div",W,[g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:i}," Undo "),g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:d}," Redo "),g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:h}," Add Chair "),g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:n[0]||(n[0]=S=>f("Vegetarian"))}," Vegetarian "),g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:n[1]||(n[1]=S=>f("Pescatarian"))}," Pescatarian "),g("button",{class:"rounded-lg border border-gray-500 bg-gray-200 px-2 py-1 text-sm",onClick:n[2]||(n[2]=S=>f("Omnivore"))}," Omnivore ")]),m(R,{ref_key:"stage",ref:e},{default:x(()=>[m(y,{ref_key:"layer",ref:a},{default:x(()=>[m(b)]),_:1},512)]),_:1},512)])}}}),J=T({layout:A,__name:"RestaurantPageOrig",setup(c){return(t,e)=>(_(),D(I,{title:"Restaurant","show-footer":!1},{default:x(()=>[m(B)]),_:1}))}});export{J as default};
